//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PicTick.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PicTickEntities : DbContext
    {
        public PicTickEntities()
            : base("name=PicTickEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Advertisement> Advertisements { get; set; }
        public virtual DbSet<AdvertisementPhoto> AdvertisementPhotoes { get; set; }
        public virtual DbSet<Album> Albums { get; set; }
        public virtual DbSet<AlbumPhoto> AlbumPhotoes { get; set; }
        public virtual DbSet<AlbumPhotoComment> AlbumPhotoComments { get; set; }
        public virtual DbSet<AlbumVideo> AlbumVideos { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<AppointmentSlot> AppointmentSlots { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<Gallery> Galleries { get; set; }
        public virtual DbSet<GalleryCustomer> GalleryCustomers { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Portfolio> Portfolios { get; set; }
        public virtual DbSet<SlideShowSound> SlideShowSounds { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<StudioAbout> StudioAbouts { get; set; }
        public virtual DbSet<StudioSocialLink> StudioSocialLinks { get; set; }
        public virtual DbSet<Photographer> Photographers { get; set; }
        public virtual DbSet<Studio> Studios { get; set; }
        public virtual DbSet<StudioAddress> StudioAddresses { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Contest> Contests { get; set; }
    
        public virtual ObjectResult<GetAlbumPhotoComment_Result> GetAlbumPhotoComment(Nullable<long> albumPhotoId)
        {
            var albumPhotoIdParameter = albumPhotoId.HasValue ?
                new ObjectParameter("AlbumPhotoId", albumPhotoId) :
                new ObjectParameter("AlbumPhotoId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlbumPhotoComment_Result>("GetAlbumPhotoComment", albumPhotoIdParameter);
        }
    
        public virtual ObjectResult<GetAlbumSelectedCount_Result> GetAlbumSelectedCount(Nullable<long> albumId)
        {
            var albumIdParameter = albumId.HasValue ?
                new ObjectParameter("AlbumId", albumId) :
                new ObjectParameter("AlbumId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlbumSelectedCount_Result>("GetAlbumSelectedCount", albumIdParameter);
        }
    
        public virtual ObjectResult<GetAppointmentData_Result> GetAppointmentData(Nullable<long> studioId, Nullable<System.DateTime> date)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppointmentData_Result>("GetAppointmentData", studioIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetAppointmentSlot_Result> GetAppointmentSlot(Nullable<long> studioId, Nullable<System.DateTime> date)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppointmentSlot_Result>("GetAppointmentSlot", studioIdParameter, dateParameter);
        }
    
        public virtual int GetCustomerAlbum(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomerAlbum", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerAlbumByAlbumId_Result> GetCustomerAlbumByAlbumId(Nullable<long> albumId)
        {
            var albumIdParameter = albumId.HasValue ?
                new ObjectParameter("AlbumId", albumId) :
                new ObjectParameter("AlbumId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAlbumByAlbumId_Result>("GetCustomerAlbumByAlbumId", albumIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerAlbumByCustomerId_Result> GetCustomerAlbumByCustomerId(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAlbumByCustomerId_Result>("GetCustomerAlbumByCustomerId", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerAlbumByGalleryId_Result> GetCustomerAlbumByGalleryId(Nullable<long> galleryId)
        {
            var galleryIdParameter = galleryId.HasValue ?
                new ObjectParameter("GalleryId", galleryId) :
                new ObjectParameter("GalleryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAlbumByGalleryId_Result>("GetCustomerAlbumByGalleryId", galleryIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerAssignGallery_Result> GetCustomerAssignGallery(Nullable<long> customerId, Nullable<long> studioId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAssignGallery_Result>("GetCustomerAssignGallery", customerIdParameter, studioIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerFcmTokenByGallery_Result> GetCustomerFcmTokenByGallery(Nullable<long> galleryId)
        {
            var galleryIdParameter = galleryId.HasValue ?
                new ObjectParameter("GalleryId", galleryId) :
                new ObjectParameter("GalleryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerFcmTokenByGallery_Result>("GetCustomerFcmTokenByGallery", galleryIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerGallery_Result> GetCustomerGallery(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerGallery_Result>("GetCustomerGallery", customerIdParameter);
        }
    
        public virtual ObjectResult<GetGalleryCustomer_Result> GetGalleryCustomer(Nullable<long> galleryId)
        {
            var galleryIdParameter = galleryId.HasValue ?
                new ObjectParameter("GalleryId", galleryId) :
                new ObjectParameter("GalleryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGalleryCustomer_Result>("GetGalleryCustomer", galleryIdParameter);
        }
    
        public virtual ObjectResult<GetGallerySelectedCount_Result> GetGallerySelectedCount(Nullable<long> galleryId)
        {
            var galleryIdParameter = galleryId.HasValue ?
                new ObjectParameter("GalleryId", galleryId) :
                new ObjectParameter("GalleryId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGallerySelectedCount_Result>("GetGallerySelectedCount", galleryIdParameter);
        }
    
        public virtual ObjectResult<GetStudioAdvertisement_Result> GetStudioAdvertisement(Nullable<long> studioId)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudioAdvertisement_Result>("GetStudioAdvertisement", studioIdParameter);
        }
    
        public virtual int UpdateCustomerInviteStatus(Nullable<long> customerId, string inviteStatus)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var inviteStatusParameter = inviteStatus != null ?
                new ObjectParameter("InviteStatus", inviteStatus) :
                new ObjectParameter("InviteStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerInviteStatus", customerIdParameter, inviteStatusParameter);
        }
    
        public virtual int UpdateCustomerVerification(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerVerification", customerIdParameter);
        }
    
        public virtual int UpdateFCMToken(Nullable<long> customerId, string fCMToken)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var fCMTokenParameter = fCMToken != null ?
                new ObjectParameter("FCMToken", fCMToken) :
                new ObjectParameter("FCMToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFCMToken", customerIdParameter, fCMTokenParameter);
        }
    
        public virtual ObjectResult<GetAlbumCustomer_Result> GetAlbumCustomer(Nullable<long> albumId)
        {
            var albumIdParameter = albumId.HasValue ?
                new ObjectParameter("AlbumId", albumId) :
                new ObjectParameter("AlbumId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlbumCustomer_Result>("GetAlbumCustomer", albumIdParameter);
        }
    
        public virtual int UpdateCustomerData(Nullable<long> customerId, string name, string mobile, string email)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerData", customerIdParameter, nameParameter, mobileParameter, emailParameter);
        }
    
        public virtual ObjectResult<GetDashboardCount_Result> GetDashboardCount(Nullable<long> studioId)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDashboardCount_Result>("GetDashboardCount", studioIdParameter);
        }
    
        public virtual int UpdatePhotographerVerification(Nullable<long> photographerId)
        {
            var photographerIdParameter = photographerId.HasValue ?
                new ObjectParameter("PhotographerId", photographerId) :
                new ObjectParameter("PhotographerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePhotographerVerification", photographerIdParameter);
        }
    
        public virtual int UpdatePhotographerFCMToken(Nullable<long> photographerId, string fCMToken)
        {
            var photographerIdParameter = photographerId.HasValue ?
                new ObjectParameter("PhotographerId", photographerId) :
                new ObjectParameter("PhotographerId", typeof(long));
    
            var fCMTokenParameter = fCMToken != null ?
                new ObjectParameter("FCMToken", fCMToken) :
                new ObjectParameter("FCMToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePhotographerFCMToken", photographerIdParameter, fCMTokenParameter);
        }
    
        public virtual ObjectResult<GetPhotographerByStudioAndBranch_Result> GetPhotographerByStudioAndBranch(Nullable<long> studioId, Nullable<long> branchId)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPhotographerByStudioAndBranch_Result>("GetPhotographerByStudioAndBranch", studioIdParameter, branchIdParameter);
        }
    
        public virtual ObjectResult<GetStudioAddressBranch_Result> GetStudioAddressBranch(Nullable<long> studioId)
        {
            var studioIdParameter = studioId.HasValue ?
                new ObjectParameter("StudioId", studioId) :
                new ObjectParameter("StudioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudioAddressBranch_Result>("GetStudioAddressBranch", studioIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerGalleryData_Result> GetCustomerGalleryData(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerGalleryData_Result>("GetCustomerGalleryData", customerIdParameter);
        }
    
        public virtual int UpdatePhotographerData(Nullable<long> photographerId, string name, string mobile, string email)
        {
            var photographerIdParameter = photographerId.HasValue ?
                new ObjectParameter("PhotographerId", photographerId) :
                new ObjectParameter("PhotographerId", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePhotographerData", photographerIdParameter, nameParameter, mobileParameter, emailParameter);
        }
    
        public virtual int UpdaterRefearAndEarn(Nullable<long> photographerId, string referalCode)
        {
            var photographerIdParameter = photographerId.HasValue ?
                new ObjectParameter("PhotographerId", photographerId) :
                new ObjectParameter("PhotographerId", typeof(long));
    
            var referalCodeParameter = referalCode != null ?
                new ObjectParameter("ReferalCode", referalCode) :
                new ObjectParameter("ReferalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdaterRefearAndEarn", photographerIdParameter, referalCodeParameter);
        }
    }
}
